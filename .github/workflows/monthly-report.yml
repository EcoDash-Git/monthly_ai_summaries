# .github/workflows/monthly_twitter_report.yml
name: Monthly Twitter Report

on:
  # Manual trigger from the Actions tab
  workflow_dispatch:

  # At 03:00 UTC on the first day of every month
  schedule:
    - cron: "0 3 1 * *"          # min hr dom mon dow

jobs:
  build-run:
    runs-on: ubuntu-latest

    # ------------------------------------------------------------------
    # Environment variables – pulled from GitHub Secrets / Org Vars
    # ------------------------------------------------------------------
    env:
      # ---------- Supabase ----------
      SUPABASE_HOST:         ${{ secrets.SUPABASE_HOST }}
      SUPABASE_PORT:         ${{ secrets.SUPABASE_PORT }}
      SUPABASE_DB:           ${{ secrets.SUPABASE_DB }}
      SUPABASE_USER:         ${{ secrets.SUPABASE_USER }}
      SUPABASE_PWD:          ${{ secrets.SUPABASE_PWD }}
      SUPABASE_URL:          ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
      SB_BUCKET:             ${{ vars.SB_BUCKET }}   # e.g. monthly-reports

      # ---------- OpenAI ----------
      OPENAI_API_KEY:        ${{ secrets.OPENAI_API_KEY }}

      # ---------- Mailjet ----------
      MJ_API_KEY:            ${{ secrets.MJ_API_KEY }}
      MJ_API_SECRET:         ${{ secrets.MJ_API_SECRET }}
      MAIL_FROM:             ${{ vars.MAIL_FROM }}
      MAIL_TO:               ${{ vars.MAIL_TO }}

      CI: true
      R_KEEP_PKG_SOURCE: no   # make installs non‑interactive

    steps:
      # 1. Checkout repository ------------------------------------------------
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2. Set up R (Posit RSPM binary cache) ---------------------------------
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      # 3. Set up Pandoc (pagedown needs it) ----------------------------------
      - name: Set up Pandoc
        uses: r-lib/actions/setup-pandoc@v2

      # 4. Install a headless Google Chrome -----------------------------------
      - name: Install headless Chrome
        uses: browser-actions/setup-chrome@v2
        with:
          install-dependencies: true
          chrome-version: stable

      # 4 bis. Expose Chrome path to chromote / pagedown ----------------------
      - name: Export CHROMOTE_CHROME for pagedown
        run: echo "CHROMOTE_CHROME=$CHROME_BIN" >> $GITHUB_ENV

      # 5. Extra system libraries Chrome + some R pkgs need -------------------
      - name: Install system libraries
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            libcurl4-openssl-dev libssl-dev libxml2-dev \
            libfontconfig1 libharfbuzz-dev libfribidi-dev \
            libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev \
            libnss3 libxss1      # ← keeps Chrome from crashing

      # 6. Install R package dependencies (uses binaries) ---------------------
      - name: Install R package dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          packages: |
            any::tidyverse
            any::lubridate
            any::httr2
            any::httr
            any::jsonlite
            any::glue
            any::pagedown
            any::RPostgres
            any::DBI
            any::base64enc
            any::tidytext

      # 7. Confirm Chrome path (debug helper) ---------------------------------
      - name: Confirm Chrome path (debug)
        run: |
          echo "CHROME_BIN -> $CHROME_BIN"
          Rscript -e 'cat("pagedown::find_chrome() ->", pagedown::find_chrome(), "\n")'

      # 8. Run the report‑generation script -----------------------------------
      - name: Run report script
        run: Rscript generate_report.R

      # 9. Upload artefacts even on failure (helps debugging) -----------------
      - name: Upload generated artefacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: monthly-report-artifacts
          path: |
            summary.md
            summary_full.pdf
          if-no-files-found: warn

